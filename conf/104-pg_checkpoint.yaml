
#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃ pg_checkpoint.pg_checkpoint_10
#┃ checkpoint information from pg_control_checkpoint since 10 (prior_lsn is not fetched)
#┃ 96 introduced 19 fields
#┃ 10  checkpoint_location/prior_location/redo_location location to lsn
#┃ 11 remove prior_lsn fields
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ COUNTER  checkpoint_lsn       lsn of checkpoint
#┃ COUNTER  redo_lsn             redo start LSN
#┃ GAUGE    tli                  current WAL timeline
#┃ GAUGE    prev_tli             previous WAL timeline
#┃ GAUGE    full_page_writes     is full page write enabled ?
#┃ GAUGE    next_xid_epoch       next xid epoch since this checkpoint
#┃ GAUGE    next_xid             next xid since this checkpoint
#┃ GAUGE    next_oid             next object id since this checkpoint
#┃ GAUGE    next_multixact_id    next multixact id of this checkpoint
#┃ GAUGE    next_multi_offset    next multixact id offset of this checkpoint
#┃ GAUGE    oldest_xid           oldest existing xid of the checkpoint
#┃ GAUGE    oldest_xid_dbid      which db contains the oldest xid
#┃ GAUGE    oldest_active_xid    oldest active xid of the checkpoint
#┃ GAUGE    oldest_multi_xid     oldest active multi xid of the checkpoint
#┃ GAUGE    oldest_multi_dbid    which db contins the oldest multi xid
#┃ GAUGE    oldest_commit_ts_xid xid with oldest commit ts by the checkpoint
#┃ GAUGE    newest_commit_ts_xid xid with newest commit ts by the checkpoint
#┃ GAUGE    time                 timestamp of this checkpoint
#┃ GAUGE    elapse               time elapsed since this checkpoint in seconds
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ pg_checkpoint_checkpoint_lsn{}
#┃ pg_checkpoint_redo_lsn{}
#┃ pg_checkpoint_tli{}
#┃ pg_checkpoint_prev_tli{}
#┃ pg_checkpoint_full_page_writes{}
#┃ pg_checkpoint_next_xid_epoch{}
#┃ pg_checkpoint_next_xid{}
#┃ pg_checkpoint_next_oid{}
#┃ pg_checkpoint_next_multixact_id{}
#┃ pg_checkpoint_next_multi_offset{}
#┃ pg_checkpoint_oldest_xid{}
#┃ pg_checkpoint_oldest_xid_dbid{}
#┃ pg_checkpoint_oldest_active_xid{}
#┃ pg_checkpoint_oldest_multi_xid{}
#┃ pg_checkpoint_oldest_multi_dbid{}
#┃ pg_checkpoint_oldest_commit_ts_xid{}
#┃ pg_checkpoint_newest_commit_ts_xid{}
#┃ pg_checkpoint_time{}
#┃ pg_checkpoint_elapse{}
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

pg_checkpoint_10:
  name: pg_checkpoint
  desc: checkpoint information from pg_control_checkpoint since 10
  query: |
    SELECT checkpoint_lsn - '0/0'                      AS checkpoint_lsn,
           redo_lsn - '0/0'                            AS redo_lsn,
           timeline_id                                 AS tli,
           prev_timeline_id                            AS prev_tli,
           full_page_writes,
           split_part(next_xid, ':', 1)                AS next_xid_epoch,
           split_part(next_xid, ':', 2)                AS next_xid,
           next_oid::BIGINT,
           next_multixact_id::text::BIGINT,
           next_multi_offset::text::BIGINT,
           oldest_xid::text::BIGINT,
           oldest_xid_dbid::text::BIGINT,
           oldest_active_xid::text::BIGINT,
           oldest_multi_xid::text::BIGINT,
           oldest_multi_dbid::BIGINT,
           oldest_commit_ts_xid::text::BIGINT,
           newest_commit_ts_xid::text::BIGINT,
           checkpoint_time                             AS time,
           extract(epoch from now() - checkpoint_time) AS elapse
    FROM pg_control_checkpoint();

  ttl: 100
  tags: [cluster]
  min_version: 100000

  metrics:
    - checkpoint_lsn:
        usage: COUNTER
        description: lsn of checkpoint
    - redo_lsn:
        usage: COUNTER
        description: redo start LSN
    - tli:
        usage: GAUGE
        description: current WAL timeline
    - prev_tli:
        usage: GAUGE
        description: previous WAL timeline
    - full_page_writes:
        usage: GAUGE
        description: is full page write enabled ?
    - next_xid_epoch:
        usage: GAUGE
        description: next xid epoch since this checkpoint
    - next_xid:
        usage: GAUGE
        description: next xid since this checkpoint
    - next_oid:
        usage: GAUGE
        description: next object id since this checkpoint
    - next_multixact_id:
        usage: GAUGE
        description: next multixact id of this checkpoint
    - next_multi_offset:
        usage: GAUGE
        description: next multixact id offset of this checkpoint
    - oldest_xid:
        usage: GAUGE
        description: oldest existing xid of the checkpoint
    - oldest_xid_dbid:
        usage: GAUGE
        description: which db contains the oldest xid
    - oldest_active_xid:
        usage: GAUGE
        description: oldest active xid of the checkpoint
    - oldest_multi_xid:
        usage: GAUGE
        description: oldest active multi xid of the checkpoint
    - oldest_multi_dbid:
        usage: GAUGE
        description: which db contins the oldest multi xid
    - oldest_commit_ts_xid:
        usage: GAUGE
        description: xid with oldest commit ts by the checkpoint
    - newest_commit_ts_xid:
        usage: GAUGE
        description: xid with newest commit ts by the checkpoint
    - time:
        usage: GAUGE
        description: timestamp of this checkpoint
    - elapse:
        usage: GAUGE
        description: time elapsed since this checkpoint in seconds


#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃ pg_checkpoint.pg_checkpoint_96
#┃ checkpoint information from pg_control_checkpoint on PostgreSQL 9.6: https://www.postgresql.org/docs/9.6/functions-info.html#FUNCTIONS-PG-CONTROL-CHECKPOINT
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ COUNTER  checkpoint_lsn       lsn of checkpoint
#┃ COUNTER  prior_lsn            prior checkpoint lsn
#┃ COUNTER  redo_lsn             redo start LSN
#┃ GAUGE    tli                  current WAL timeline
#┃ GAUGE    prev_tli             previous WAL timeline
#┃ GAUGE    full_page_writes     is full page write enabled ?
#┃ GAUGE    next_xid_epoch       next xid epoch since this checkpoint
#┃ GAUGE    next_xid             next xid since this checkpoint
#┃ GAUGE    next_oid             next object id since this checkpoint
#┃ GAUGE    next_multixact_id    next multixact id of this checkpoint
#┃ GAUGE    next_multi_offset    next multixact id offset of this checkpoint
#┃ GAUGE    oldest_xid           oldest existing xid of the checkpoint
#┃ GAUGE    oldest_xid_dbid      which db contains the oldest xid
#┃ GAUGE    oldest_active_xid    oldest active xid of the checkpoint
#┃ GAUGE    oldest_multi_xid     oldest active multi xid of the checkpoint
#┃ GAUGE    oldest_multi_dbid    which db contins the oldest multi xid
#┃ GAUGE    oldest_commit_ts_xid xid with oldest commit ts by the checkpoint
#┃ GAUGE    newest_commit_ts_xid xid with newest commit ts by the checkpoint
#┃ GAUGE    time                 timestamp of this checkpoint
#┃ GAUGE    elapse               time elapsed since this checkpoint in seconds
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ pg_checkpoint_checkpoint_lsn{}
#┃ pg_checkpoint_prior_lsn{}
#┃ pg_checkpoint_redo_lsn{}
#┃ pg_checkpoint_tli{}
#┃ pg_checkpoint_prev_tli{}
#┃ pg_checkpoint_full_page_writes{}
#┃ pg_checkpoint_next_xid_epoch{}
#┃ pg_checkpoint_next_xid{}
#┃ pg_checkpoint_next_oid{}
#┃ pg_checkpoint_next_multixact_id{}
#┃ pg_checkpoint_next_multi_offset{}
#┃ pg_checkpoint_oldest_xid{}
#┃ pg_checkpoint_oldest_xid_dbid{}
#┃ pg_checkpoint_oldest_active_xid{}
#┃ pg_checkpoint_oldest_multi_xid{}
#┃ pg_checkpoint_oldest_multi_dbid{}
#┃ pg_checkpoint_oldest_commit_ts_xid{}
#┃ pg_checkpoint_newest_commit_ts_xid{}
#┃ pg_checkpoint_time{}
#┃ pg_checkpoint_elapse{}
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_checkpoint_96:
  name: pg_checkpoint
  desc: "checkpoint information from pg_control_checkpoint on PostgreSQL 9.6: https://www.postgresql.org/docs/9.6/functions-info.html#FUNCTIONS-PG-CONTROL-CHECKPOINT"
  query: |
    SELECT checkpoint_location - '0/0'                 AS checkpoint_lsn,
           prior_location - '0/0'                      AS prior_lsn,
           redo_location - '0/0'                       AS redo_lsn,
           timeline_id                                 AS tli,
           prev_timeline_id                            AS prev_tli,
           full_page_writes,
           split_part(next_xid, ':', 1)                AS next_xid_epoch,
           split_part(next_xid, ':', 2)                AS next_xid,
           next_oid::BIGINT,
           next_multixact_id::text::BIGINT,
           next_multi_offset::text::BIGINT,
           oldest_xid::text::BIGINT,
           oldest_xid_dbid::text::BIGINT,
           oldest_active_xid::text::BIGINT,
           oldest_multi_xid::text::BIGINT,
           oldest_multi_dbid::BIGINT,
           oldest_commit_ts_xid::text::BIGINT,
           newest_commit_ts_xid::text::BIGINT,
           checkpoint_time                             AS time,
           extract(epoch from now() - checkpoint_time) AS elapse
    FROM pg_control_checkpoint();

  ttl: 100
  tags: [cluster]
  min_version: 090600
  max_version: 100000

  metrics:
    - checkpoint_lsn:
        usage: COUNTER
        description: lsn of checkpoint
    - prior_lsn:
        usage: COUNTER
        description: prior checkpoint lsn
    - redo_lsn:
        usage: COUNTER
        description: redo start LSN
    - tli:
        usage: GAUGE
        description: current WAL timeline
    - prev_tli:
        usage: GAUGE
        description: previous WAL timeline
    - full_page_writes:
        usage: GAUGE
        description: is full page write enabled ?
    - next_xid_epoch:
        usage: GAUGE
        description: next xid epoch since this checkpoint
    - next_xid:
        usage: GAUGE
        description: next xid since this checkpoint
    - next_oid:
        usage: GAUGE
        description: next object id since this checkpoint
    - next_multixact_id:
        usage: GAUGE
        description: next multixact id of this checkpoint
    - next_multi_offset:
        usage: GAUGE
        description: next multixact id offset of this checkpoint
    - oldest_xid:
        usage: GAUGE
        description: oldest existing xid of the checkpoint
    - oldest_xid_dbid:
        usage: GAUGE
        description: which db contains the oldest xid
    - oldest_active_xid:
        usage: GAUGE
        description: oldest active xid of the checkpoint
    - oldest_multi_xid:
        usage: GAUGE
        description: oldest active multi xid of the checkpoint
    - oldest_multi_dbid:
        usage: GAUGE
        description: which db contins the oldest multi xid
    - oldest_commit_ts_xid:
        usage: GAUGE
        description: xid with oldest commit ts by the checkpoint
    - newest_commit_ts_xid:
        usage: GAUGE
        description: xid with newest commit ts by the checkpoint
    - time:
        usage: GAUGE
        description: timestamp of this checkpoint
    - elapse:
        usage: GAUGE
        description: time elapsed since this checkpoint in seconds

