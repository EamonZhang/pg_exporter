
#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃ pg_shard is consist of a series queries specially designed for sharding instance
#┃ note that sharding is not a built-in feature so this file is just for your reference
#┃
#┃ In this redis-like sharding plan, each partition is put into a series of schemas, named as `rel_8192_%d`
#┃ So we only take one sample of those partition (lowest partition id)
#┃
#┃ All these queries is tagged with 'shard' , so if you start pg_exporter with --tag=shard
#┃ these queries (117, 121-128 pg_query, pg_class, pg_table, pg_table_size, ....) with be replaced with
#┃ following definition
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━


#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃ pg_query.pg_query_shard
#┃ PostgreSQL Query metrics, require pg_stat_statements installed in schema monitor, shard version
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ LABEL    query                query identifier, bigint
#┃ COUNTER  calls                times been executed
#┃ COUNTER  total_time           Total time spent in the statement, in µs
#┃ GAUGE    min_time             Minimum time spent in the statement, in µs
#┃ GAUGE    max_time             Maximum time spent in the statement, in µs
#┃ GAUGE    mean_time            Mean time spent in the statement, in µs
#┃ GAUGE    stddev_time          Population standard deviation of time spent in the statement, in µs
#┃ COUNTER  rows                 rows retrieved or affected by the statement
#┃ COUNTER  shared_blks_hit      shared block cache hits by the statement
#┃ COUNTER  shared_blks_read     shared blocks read by the statement
#┃ COUNTER  shared_blks_access   shared blocks accessed by the statement
#┃ COUNTER  shared_blks_dirtied  shared blocks dirtied by the statement
#┃ COUNTER  shared_blks_written  shared blocks written by the statement
#┃ COUNTER  blk_read_time        time spent reading blocks, in µs (if track_io_timing is enabled)
#┃ COUNTER  blk_write_time       time spent writing blocks, in µs (if track_io_timing is enabled)
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ pg_query_calls{query}
#┃ pg_query_total_time{query}
#┃ pg_query_min_time{query}
#┃ pg_query_max_time{query}
#┃ pg_query_mean_time{query}
#┃ pg_query_stddev_time{query}
#┃ pg_query_rows{query}
#┃ pg_query_shared_blks_hit{query}
#┃ pg_query_shared_blks_read{query}
#┃ pg_query_shared_blks_access{query}
#┃ pg_query_shared_blks_dirtied{query}
#┃ pg_query_shared_blks_written{query}
#┃ pg_query_blk_read_time{query}
#┃ pg_query_blk_write_time{query}
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_query_shard:
  name: pg_query
  desc: PostgreSQL Query metrics, require pg_stat_statements installed in schema monitor, shard version
  query: |
    SELECT queryid                                      AS query,
           sum(calls)                                   AS calls,
           sum(total_time)                              AS total_time,
           avg(min_time)                                AS min_time,
           avg(max_time)                                AS max_time,
           avg(mean_time)                               AS mean_time,
           avg(stddev_time)                             AS stddev_time,
           sum(rows)                                    AS rows,
           sum(shared_blks_hit)                         AS shared_blks_hit,
           sum(shared_blks_read)                        AS shared_blks_read,
           sum(shared_blks_read) + sum(shared_blks_hit) AS shared_blks_access,
           sum(shared_blks_dirtied)                     AS shared_blks_dirtied,
           sum(shared_blks_written)                     AS shared_blks_written,
           sum(blk_read_time)                           AS blk_read_time,
           sum(blk_write_time)                          AS blk_write_time
    FROM monitor.pg_stat_statements s
    WHERE calls > 64 AND query ~ (SELECT min(nspname) FROM pg_namespace WHERE nspname LIKE 'rel_8192_%' LIMIT 1)
    GROUP BY queryid
    ORDER BY total_time DESC
    LIMIT 32;

  ttl: 200
  timeout: 3
  tags: [cluster, extension:pg_stat_statements , schema:monitor, shard, not:bulky]
  min_version: 090400

  metrics:
    - query:
        usage: LABEL
        description: query identifier, bigint
    - calls:
        usage: COUNTER
        description: times been executed
    - total_time:
        usage: COUNTER
        description: Total time spent in the statement, in µs
    - min_time:
        usage: GAUGE
        description: Minimum time spent in the statement, in µs
    - max_time:
        usage: GAUGE
        description: Maximum time spent in the statement, in µs
    - mean_time:
        usage: GAUGE
        description: Mean time spent in the statement, in µs
    - stddev_time:
        usage: GAUGE
        description: Population standard deviation of time spent in the statement, in µs
    - rows:
        usage: COUNTER
        description: rows retrieved or affected by the statement
    - shared_blks_hit:
        usage: COUNTER
        description: shared block cache hits by the statement
    - shared_blks_read:
        usage: COUNTER
        description: shared blocks read by the statement
    - shared_blks_access:
        usage: COUNTER
        description: shared blocks accessed by the statement
    - shared_blks_dirtied:
        usage: COUNTER
        description: shared blocks dirtied by the statement
    - shared_blks_written:
        usage: COUNTER
        description: shared blocks written by the statement
    - blk_read_time:
        usage: COUNTER
        description: time spent reading blocks, in µs (if track_io_timing is enabled)
    - blk_write_time:
        usage: COUNTER
        description: time spent writing blocks, in µs (if track_io_timing is enabled)



#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃ pg_class.pg_class_shard
#┃ Postgres relation statistic, db level , shard version
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ LABEL    datname              database name of this relation
#┃ LABEL    nspname              schema name of this relation
#┃ LABEL    relname              relation name of this relation
#┃ LABEL    relkind              relation type r-table i-index s-sequence m-mview t-toast
#┃ GAUGE    relpages             exact page count of this relation
#┃ GAUGE    reltuples            estimate relation tuples
#┃ GAUGE    relage               age of non-index relation
#┃ GAUGE    relsize              size of this relation
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ pg_class_relpages{datname,nspname,relname,relkind}
#┃ pg_class_reltuples{datname,nspname,relname,relkind}
#┃ pg_class_relage{datname,nspname,relname,relkind}
#┃ pg_class_relsize{datname,nspname,relname,relkind}
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_class_shard:
  name: pg_class
  desc: Postgres relation statistic, db level , shard version

  query: |
    SELECT CURRENT_CATALOG                                              AS datname,
           relnamespace::RegNamespace                                   AS nspname,
           relname,
           relkind,
           relpages,
           reltuples,
           CASE WHEN relkind = 'i' THEN NULL ELSE age(relfrozenxid) END AS relage,
           pg_relation_size(pc.oid)                                     AS relsize
    FROM pg_class pc
             LEFT JOIN pg_namespace pn on pc.relnamespace = pn.oid
    WHERE (nspname IN (SELECT min(nspname) FROM pg_namespace WHERE nspname LIKE 'rel_8192_%' LIMIT 1) OR nspname = 'user_search')
        AND relkind IN ('r', 'i', 'm', 't');

  ttl: 100
  timeout: 1
  tags: [shard, not:bulky]
  min_version: 090400

  metrics:
    - datname:
        usage: LABEL
        description: database name of this relation
    - nspname:
        usage: LABEL
        description: schema name of this relation
    - relname:
        usage: LABEL
        description: relation name of this relation
    - relkind:
        usage: LABEL
        description: relation type r-table i-index s-sequence m-mview t-toast
    - relpages:
        usage: GAUGE
        description: exact page count of this relation
    - reltuples:
        usage: GAUGE
        description: estimate relation tuples
    - relage:
        usage: GAUGE
        description: age of non-index relation
    - relsize:
        usage: GAUGE
        description: size of this relation



#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃ pg_table.pg_table_shard
#┃ PostgreSQL table statistics, db level, shard version
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ LABEL    datname              database name of this relation
#┃ LABEL    nspname              schema name of this relation
#┃ LABEL    relname              relation name of this relation
#┃ COUNTER  seq_scan             sequential scans initiated on this table
#┃ COUNTER  seq_tup_read         live rows fetched by sequential scans
#┃ COUNTER  idx_scan             index scans initiated on this table
#┃ COUNTER  idx_tup_fetch        rows fetched by index scans
#┃ COUNTER  tbl_scan             total table scan = index scan + seq scan
#┃ COUNTER  tup_read             total tuples read = index fetch + seq read
#┃ COUNTER  n_tup_ins            rows inserted
#┃ COUNTER  n_tup_upd            rows updated
#┃ COUNTER  n_tup_del            rows deleted
#┃ COUNTER  n_tup_mod            rows modified (insert + update + delete)
#┃ COUNTER  n_tup_hot_upd        rows updated in HOT mode
#┃ GAUGE    n_live_tup           estimated live rows
#┃ GAUGE    n_dead_tup           estimated dead rows
#┃ GAUGE    n_mod_since_analyze  rows changed since last analyze
#┃ GAUGE    last_vacuum          when table was manually vacuumed last time (FULL not count)
#┃ GAUGE    last_autovacuum      when table was automatically vacuumed last time
#┃ GAUGE    last_analyze         when table was manually analyzed last time
#┃ GAUGE    last_autoanalyze     when table was automatically analyzed last time
#┃ COUNTER  vacuum_count         manual vacuum count (FULL not count)
#┃ COUNTER  autovacuum_count     automatic vacuum count
#┃ COUNTER  analyze_count        manual analyze count
#┃ COUNTER  autoanalyze_count    automatic analyze count
#┃ COUNTER  heap_blks_read       relation heap read
#┃ COUNTER  heap_blks_hit        relation heap hit
#┃ COUNTER  idx_blks_read        index read
#┃ COUNTER  idx_blks_hit         index hit
#┃ COUNTER  toast_blks_read      toast heap read
#┃ COUNTER  toast_blks_hit       toast heap hit
#┃ COUNTER  tidx_blks_read       toast index read
#┃ COUNTER  tidx_blks_hit        toast index hit
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ pg_table_seq_scan{datname,nspname,relname}
#┃ pg_table_seq_tup_read{datname,nspname,relname}
#┃ pg_table_idx_scan{datname,nspname,relname}
#┃ pg_table_idx_tup_fetch{datname,nspname,relname}
#┃ pg_table_tbl_scan{datname,nspname,relname}
#┃ pg_table_tup_read{datname,nspname,relname}
#┃ pg_table_n_tup_ins{datname,nspname,relname}
#┃ pg_table_n_tup_upd{datname,nspname,relname}
#┃ pg_table_n_tup_del{datname,nspname,relname}
#┃ pg_table_n_tup_mod{datname,nspname,relname}
#┃ pg_table_n_tup_hot_upd{datname,nspname,relname}
#┃ pg_table_n_live_tup{datname,nspname,relname}
#┃ pg_table_n_dead_tup{datname,nspname,relname}
#┃ pg_table_n_mod_since_analyze{datname,nspname,relname}
#┃ pg_table_last_vacuum{datname,nspname,relname}
#┃ pg_table_last_autovacuum{datname,nspname,relname}
#┃ pg_table_last_analyze{datname,nspname,relname}
#┃ pg_table_last_autoanalyze{datname,nspname,relname}
#┃ pg_table_vacuum_count{datname,nspname,relname}
#┃ pg_table_autovacuum_count{datname,nspname,relname}
#┃ pg_table_analyze_count{datname,nspname,relname}
#┃ pg_table_autoanalyze_count{datname,nspname,relname}
#┃ pg_table_heap_blks_read{datname,nspname,relname}
#┃ pg_table_heap_blks_hit{datname,nspname,relname}
#┃ pg_table_idx_blks_read{datname,nspname,relname}
#┃ pg_table_idx_blks_hit{datname,nspname,relname}
#┃ pg_table_toast_blks_read{datname,nspname,relname}
#┃ pg_table_toast_blks_hit{datname,nspname,relname}
#┃ pg_table_tidx_blks_read{datname,nspname,relname}
#┃ pg_table_tidx_blks_hit{datname,nspname,relname}
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_table_shard:
  name: pg_table
  desc: PostgreSQL table statistics, db level, shard version

  query: |
    SELECT CURRENT_CATALOG                     AS datname,
           psut.schemaname                     AS nspname,
           psut.relname,
           seq_scan,
           seq_tup_read,
           idx_scan,
           idx_tup_fetch,
           seq_scan + idx_scan                 AS tbl_scan,
           seq_tup_read + idx_tup_fetch        AS tup_read,
           n_tup_ins,
           n_tup_upd,
           n_tup_del,
           (n_tup_ins + n_tup_upd + n_tup_del) AS n_tup_mod,
           n_tup_hot_upd,
           n_live_tup,
           n_dead_tup,
           n_mod_since_analyze,
           last_vacuum,
           last_autovacuum,
           last_analyze,
           last_autoanalyze,
           vacuum_count,
           autovacuum_count,
           analyze_count,
           autoanalyze_count,
           heap_blks_read,
           heap_blks_hit,
           idx_blks_read,
           idx_blks_hit,
           toast_blks_read,
           toast_blks_hit,
           tidx_blks_read,
           tidx_blks_hit
    FROM pg_stat_user_tables psut,
         LATERAL (SELECT * FROM pg_statio_user_tables psio WHERE psio.relid = psut.relid) p
    WHERE (psut.schemaname IN (SELECT min(nspname) FROM pg_namespace WHERE nspname LIKE 'rel_8192_%' LIMIT 1) OR psut.schemaname = 'user_search');

  ttl: 100
  timeout: 3
  tags: [shard, not:bulky]
  min_version: 090400

  metrics:
    - datname:
        usage: LABEL
        description: database name of this relation
    - nspname:
        usage: LABEL
        description: schema name of this relation
    - relname:
        usage: LABEL
        description: relation name of this relation
    - seq_scan:
        usage: COUNTER
        description: sequential scans initiated on this table
    - seq_tup_read:
        usage: COUNTER
        description: live rows fetched by sequential scans
    - idx_scan:
        usage: COUNTER
        description: index scans initiated on this table
    - idx_tup_fetch:
        usage: COUNTER
        description: rows fetched by index scans
    - tbl_scan:
        usage: COUNTER
        description: total table scan = index scan + seq scan
    - tup_read:
        usage: COUNTER
        description: total tuples read = index fetch + seq read
    - n_tup_ins:
        usage: COUNTER
        description: rows inserted
    - n_tup_upd:
        usage: COUNTER
        description: rows updated
    - n_tup_del:
        usage: COUNTER
        description: rows deleted
    - n_tup_mod:
        usage: COUNTER
        description: rows modified (insert + update + delete)
    - n_tup_hot_upd:
        usage: COUNTER
        description: rows updated in HOT mode
    - n_live_tup:
        usage: GAUGE
        description: estimated live rows
    - n_dead_tup:
        usage: GAUGE
        description: estimated dead rows
    - n_mod_since_analyze:
        usage: GAUGE
        description: rows changed since last analyze
    - last_vacuum:
        usage: GAUGE
        description: when table was manually vacuumed last time (FULL not count)
    - last_autovacuum:
        usage: GAUGE
        description: when table was automatically vacuumed last time
    - last_analyze:
        usage: GAUGE
        description: when table was manually analyzed last time
    - last_autoanalyze:
        usage: GAUGE
        description: when table was automatically analyzed last time
    - vacuum_count:
        usage: COUNTER
        description: manual vacuum count (FULL not count)
    - autovacuum_count:
        usage: COUNTER
        description: automatic vacuum count
    - analyze_count:
        usage: COUNTER
        description: manual analyze count
    - autoanalyze_count:
        usage: COUNTER
        description: automatic analyze count
    - heap_blks_read:
        usage: COUNTER
        description: relation heap read
    - heap_blks_hit:
        usage: COUNTER
        description: relation heap hit
    - idx_blks_read:
        usage: COUNTER
        description: index read
    - idx_blks_hit:
        usage: COUNTER
        description: index hit
    - toast_blks_read:
        usage: COUNTER
        description: toast heap read
    - toast_blks_hit:
        usage: COUNTER
        description: toast heap hit
    - tidx_blks_read:
        usage: COUNTER
        description: toast index read
    - tidx_blks_hit:
        usage: COUNTER
        description: toast index hit



#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃ pg_table_size.pg_table_size_shard
#┃ PostgreSQL table size detail, db level, shard version
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ LABEL    datname              database name of this relation
#┃ LABEL    nspname              schema name of this relation
#┃ LABEL    relname              relation name of this relation
#┃ GAUGE    bytes                total size of this table (including toast, index, toast index)
#┃ GAUGE    relsize              size of this table itself (main, vm, fsm)
#┃ GAUGE    indexsize            size of all related indexes
#┃ GAUGE    toastsize            size of corresponding toast tables
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ pg_table_size_bytes{datname,nspname,relname}
#┃ pg_table_size_relsize{datname,nspname,relname}
#┃ pg_table_size_indexsize{datname,nspname,relname}
#┃ pg_table_size_toastsize{datname,nspname,relname}
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

pg_table_size_shard:
  name: pg_table_size
  desc: PostgreSQL table size detail, db level, shard version

  query: |
    SELECT CURRENT_CATALOG                       AS datname,
           nsp.nspname,
           rel.relname,
           pg_total_relation_size(rel.oid)       AS bytes,
           pg_relation_size(rel.oid)             AS relsize,
           pg_indexes_size(rel.oid)              AS indexsize,
           pg_total_relation_size(reltoastrelid) AS toastsize
    FROM pg_namespace nsp
             JOIN pg_class rel ON nsp.oid = rel.relnamespace
    WHERE rel.relkind = 'r' AND
          (nsp.nspname IN (SELECT min(nspname) FROM pg_namespace WHERE nspname LIKE 'rel_8192_%' LIMIT 1) OR nsp.nspname = 'user_search');

  ttl: 200
  timeout: 2
  tags: [shard, not:bulky]
  min_version: 100000

  metrics:
    - datname:
        usage: LABEL
        description: database name of this relation
    - nspname:
        usage: LABEL
        description: schema name of this relation
    - relname:
        usage: LABEL
        description: relation name of this relation
    - bytes:
        usage: GAUGE
        description: total size of this table (including toast, index, toast index)
    - relsize:
        usage: GAUGE
        description: size of this table itself (main, vm, fsm)
    - indexsize:
        usage: GAUGE
        description: size of all related indexes
    - toastsize:
        usage: GAUGE
        description: size of corresponding toast tables



#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃ pg_table_bloat.pg_table_bloat_shard
#┃ PostgreSQL table bloat statistics, db level, shard version, require pg_stats access
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ LABEL    datname              database name of this table
#┃ LABEL    nspname              schema name of this table
#┃ LABEL    relname              relation name of this table
#┃ GAUGE    size                 total size in bytes of this table
#┃ GAUGE    ratio                estimated bloat ratio of this table, 0~1
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ pg_table_bloat_size{datname,nspname,relname}
#┃ pg_table_bloat_ratio{datname,nspname,relname}
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

pg_table_bloat_shard:
  name: pg_table_bloat
  desc: PostgreSQL table bloat statistics, db level, shard version, require pg_stats access

  query: |
    SELECT CURRENT_CATALOG AS datname, nspname, relname , bs * tblpages AS size,
           CASE WHEN tblpages - est_tblpages_ff > 0 THEN (tblpages - est_tblpages_ff)/tblpages::FLOAT ELSE 0 END AS ratio
    FROM (
             SELECT ceil( reltuples / ( (bs-page_hdr)*fillfactor/(tpl_size*100) ) ) + ceil( toasttuples / 4 ) AS est_tblpages_ff,
                    tblpages, fillfactor, bs, tblid, nspname, relname, is_na
             FROM (
                      SELECT
                          ( 4 + tpl_hdr_size + tpl_data_size + (2 * ma)
                              - CASE WHEN tpl_hdr_size % ma = 0 THEN ma ELSE tpl_hdr_size % ma END
                              - CASE WHEN ceil(tpl_data_size)::INT % ma = 0 THEN ma ELSE ceil(tpl_data_size)::INT % ma END
                              ) AS tpl_size, (heappages + toastpages) AS tblpages, heappages,
                          toastpages, reltuples, toasttuples, bs, page_hdr, tblid, nspname, relname, fillfactor, is_na
                      FROM (
                               SELECT
                                   tbl.oid AS tblid, ns.nspname , tbl.relname, tbl.reltuples,
                                   tbl.relpages AS heappages, coalesce(toast.relpages, 0) AS toastpages,
                                   coalesce(toast.reltuples, 0) AS toasttuples,
                                   coalesce(substring(array_to_string(tbl.reloptions, ' ') FROM 'fillfactor=([0-9]+)')::smallint, 100) AS fillfactor,
                                   current_setting('block_size')::numeric AS bs,
                                   CASE WHEN version()~'mingw32' OR version()~'64-bit|x86_64|ppc64|ia64|amd64' THEN 8 ELSE 4 END AS ma,
                                   24 AS page_hdr,
                                   23 + CASE WHEN MAX(coalesce(s.null_frac,0)) > 0 THEN ( 7 + count(s.attname) ) / 8 ELSE 0::int END
                                       + CASE WHEN bool_or(att.attname = 'oid' and att.attnum < 0) THEN 4 ELSE 0 END AS tpl_hdr_size,
                                   sum( (1-coalesce(s.null_frac, 0)) * coalesce(s.avg_width, 0) ) AS tpl_data_size,
                                   bool_or(att.atttypid = 'pg_catalog.name'::regtype)
                                       OR sum(CASE WHEN att.attnum > 0 THEN 1 ELSE 0 END) <> count(s.attname) AS is_na
                               FROM pg_attribute AS att
                                        JOIN pg_class AS tbl ON att.attrelid = tbl.oid
                                        JOIN pg_namespace AS ns ON ns.oid = tbl.relnamespace
                                        LEFT JOIN pg_stats AS s ON s.schemaname=ns.nspname AND s.tablename = tbl.relname AND s.inherited=false AND s.attname=att.attname
                                        LEFT JOIN pg_class AS toast ON tbl.reltoastrelid = toast.oid
                               WHERE NOT att.attisdropped AND tbl.relkind = 'r' AND (nspname IN (SELECT min(nspname) FROM pg_namespace WHERE nspname LIKE 'rel_8192_%' LIMIT 1) OR nspname = 'user_search')
                               GROUP BY 1,2,3,4,5,6,7,8,9,10
                           ) AS s
                  ) AS s2
         ) AS s3
    WHERE NOT is_na;


  ttl: 200
  timeout: 5
  tags: [shard, not:bulky]
  min_version: 090400

  metrics:
    - datname:
        usage: LABEL
        description: database name of this table
    - nspname:
        usage: LABEL
        description: schema name of this table
    - relname:
        usage: LABEL
        description: relation name of this table
    - size:
        usage: GAUGE
        description: total size in bytes of this table
    - ratio:
        usage: GAUGE
        description: estimated bloat ratio of this table, 0~1




#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃ pg_index.pg_index_shard
#┃ PostgreSQL index statistics, db level, shard version
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ LABEL    datname              database name of this relation
#┃ LABEL    nspname              schema name of this relation
#┃ LABEL    relname              relation name of this relation
#┃ COUNTER  idx_scan             index scans initiated on this index
#┃ COUNTER  idx_tup_read         index entries returned by scans on this index
#┃ COUNTER  idx_tup_fetch        live table rows fetched by simple index scans using this index
#┃ COUNTER  idx_blks_read        blocks been read from disk of this index
#┃ COUNTER  idx_blks_hit         blocks hit from cache of this index
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ pg_index_idx_scan{datname,nspname,relname}
#┃ pg_index_idx_tup_read{datname,nspname,relname}
#┃ pg_index_idx_tup_fetch{datname,nspname,relname}
#┃ pg_index_idx_blks_read{datname,nspname,relname}
#┃ pg_index_idx_blks_hit{datname,nspname,relname}
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

pg_index_shard:
  name: pg_index
  desc: PostgreSQL index statistics, db level, shard version

  query: |
    SELECT CURRENT_CATALOG AS datname,
           schemaname      AS nspname,
           indexrelname    AS relname,
           idx_scan,
           idx_tup_read,
           idx_tup_fetch,
           idx_blks_read,
           idx_blks_hit
    FROM pg_stat_user_indexes psui,
         LATERAL (SELECT idx_blks_read, idx_blks_hit FROM pg_statio_user_indexes psio WHERE psio.indexrelid = psui.indexrelid) p2
    WHERE psui.schemaname IN (SELECT min(nspname) FROM pg_namespace WHERE nspname LIKE 'rel_8192_%' LIMIT 1) OR psui.schemaname = 'user_search';

  ttl: 100
  timeout: 1
  tags: [shard, not:bulky]
  min_version: 090400

  metrics:
    - datname:
        usage: LABEL
        description: database name of this relation
    - nspname:
        usage: LABEL
        description: schema name of this relation
    - relname:
        usage: LABEL
        description: relation name of this relation
    - idx_scan:
        usage: COUNTER
        description: index scans initiated on this index
    - idx_tup_read:
        usage: COUNTER
        description: index entries returned by scans on this index
    - idx_tup_fetch:
        usage: COUNTER
        description: live table rows fetched by simple index scans using this index
    - idx_blks_read:
        usage: COUNTER
        description: blocks been read from disk of this index
    - idx_blks_hit:
        usage: COUNTER
        description: blocks hit from cache of this index


#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃ pg_index_bloat.pg_index_bloat_shard
#┃ PostgreSQL Index Bloat, btree only, db level, shard version
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ LABEL    datname              database name of this index
#┃ LABEL    nspname              schema name of this index
#┃ LABEL    relname              relation name of this index relation
#┃ GAUGE    size                 total size in bytes of this index
#┃ GAUGE    ratio                estimated bloat ratio of this index, 0~1
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ pg_index_bloat_size{datname,nspname,relname}
#┃ pg_index_bloat_ratio{datname,nspname,relname}
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_index_bloat_shard:
  name: pg_index_bloat
  desc: PostgreSQL Index Bloat, btree only, db level, shard version

  query: |
    SELECT CURRENT_CATALOG AS datname, nspname, idxname AS relname, relpages::BIGINT * bs AS size,
           COALESCE((relpages - ( reltuples * (6 + ma - (CASE WHEN index_tuple_hdr % ma = 0 THEN ma ELSE index_tuple_hdr % ma END)
                                                   + nulldatawidth + ma - (CASE WHEN nulldatawidth % ma = 0 THEN ma ELSE nulldatawidth % ma END))
                                      / (bs - pagehdr)::FLOAT  + 1 )), 0) / relpages::FLOAT AS ratio
    FROM (
             SELECT nspname,
                    idxname,
                    reltuples,
                    relpages,
                    current_setting('block_size')::INTEGER                                                               AS bs,
                    (CASE WHEN version() ~ 'mingw32' OR version() ~ '64-bit|x86_64|ppc64|ia64|amd64' THEN 8 ELSE 4 END)  AS ma,
                    24                                                                                                   AS pagehdr,
                    (CASE WHEN max(COALESCE(pg_stats.null_frac, 0)) = 0 THEN 2 ELSE 6 END)                               AS index_tuple_hdr,
                    sum((1.0 - COALESCE(pg_stats.null_frac, 0.0)) *
                        COALESCE(pg_stats.avg_width, 1024))::INTEGER                                                     AS nulldatawidth
             FROM pg_attribute
                      JOIN (
                 SELECT pg_namespace.nspname,
                        ic.relname                                                   AS idxname,
                        ic.reltuples,
                        ic.relpages,
                        pg_index.indrelid,
                        pg_index.indexrelid,
                        tc.relname                                                   AS tablename,
                        regexp_split_to_table(pg_index.indkey::TEXT, ' ') :: INTEGER AS attnum,
                        pg_index.indexrelid                                          AS index_oid
                 FROM pg_index
                          JOIN pg_class ic ON pg_index.indexrelid = ic.oid
                          JOIN pg_class tc ON pg_index.indrelid = tc.oid
                          JOIN pg_namespace ON pg_namespace.oid = ic.relnamespace
                          JOIN pg_am ON ic.relam = pg_am.oid
                 WHERE pg_am.amname = 'btree' AND ic.relpages > 0
                   AND (nspname IN (SELECT min(nspname) FROM pg_namespace WHERE nspname LIKE 'rel_8192_%' LIMIT 1) OR nspname = 'user_search')
             ) ind_atts ON pg_attribute.attrelid = ind_atts.indexrelid AND pg_attribute.attnum = ind_atts.attnum
                      JOIN pg_stats ON pg_stats.schemaname = ind_atts.nspname
                 AND ((pg_stats.tablename = ind_atts.tablename AND pg_stats.attname = pg_get_indexdef(pg_attribute.attrelid, pg_attribute.attnum, TRUE))
                     OR (pg_stats.tablename = ind_atts.idxname AND pg_stats.attname = pg_attribute.attname))
             WHERE pg_attribute.attnum > 0
             GROUP BY 1, 2, 3, 4, 5, 6
         ) est;

  ttl: 200
  timeout: 3
  tags: [shard, not:bulky]
  min_version: 090400

  metrics:
    - datname:
        usage: LABEL
        description: database name of this index
    - nspname:
        usage: LABEL
        description: schema name of this index
    - relname:
        usage: LABEL
        description: relation name of this index relation
    - size:
        usage: GAUGE
        description: total size in bytes of this index
    - ratio:
        usage: GAUGE
        description: estimated bloat ratio of this index, 0~1






#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃ pg_func.pg_func_shard
#┃ PostgreSQL Function execution statistics, db level, shard version
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ LABEL    datname              database name of this function
#┃ LABEL    nspname              schema name of this function
#┃ LABEL    funcname             function name of this function
#┃ LABEL    funcid               function id, note that function could override
#┃ COUNTER  calls                how many times this function has been called
#┃ COUNTER  total_time           how much time spent in this function and it's child function, in ms
#┃ COUNTER  self_time            how much time spent in this function itself (other func not included), in ms
#┣┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈
#┃ pg_func_calls{datname,nspname,funcname,funcid}
#┃ pg_func_total_time{datname,nspname,funcname,funcid}
#┃ pg_func_self_time{datname,nspname,funcname,funcid}
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
pg_func_shard:
  name: pg_func
  desc: PostgreSQL Function execution statistics, db level, shard version

  query: |
    SELECT CURRENT_CATALOG AS datname,
           schemaname      AS nspname,
           funcname,
           funcid,
           calls,
           total_time,
           self_time
    FROM pg_stat_user_functions
    WHERE schemaname IN (SELECT min(nspname) FROM pg_namespace WHERE nspname LIKE 'rel_8192_%' LIMIT 1) OR schemaname = 'user_search';

  ttl: 100
  timeout: 1
  tags: [shard, not:bulky]
  min_version: 090400

  metrics:
    - datname:
        usage: LABEL
        description: database name of this function
    - nspname:
        usage: LABEL
        description: schema name of this function
    - funcname:
        usage: LABEL
        description: function name of this function
    - funcid:
        usage: LABEL
        description: function id, note that function could override
    - calls:
        usage: COUNTER
        description: how many times this function has been called
    - total_time:
        usage: COUNTER
        description: how much time spent in this function and it's child function, in ms
    - self_time:
        usage: COUNTER
        description: how much time spent in this function itself (other func not included), in ms

