###############################################################
# PostgreSQL/Pgbouncer Metric Queries
# Author:   Vonng (fengruohang@outlook.com)
# Desc  :   pg_exporter metrics config files
# Ver   :   PostgreSQL 10, 11, 12, pgbouncer 1.9+
# Mtime :   2019-12-09
###############################################################



###############################################################
# Cluster Level Metrics
#   These are cluster level metrics (visible from all database)
#   cluster queries will not execute for each database of the
#   same cluster
###############################################################

#-------------------------------------------------------------#
# pg
# generic
#-------------------------------------------------------------#

pg:
  query: |
    SELECT pg_is_in_recovery() AS is_in_recovery,
      pg_is_in_backup()   AS is_in_backup,
      (CASE WHEN pg_is_in_recovery() THEN pg_last_wal_replay_lsn()  ELSE pg_current_wal_lsn() END) - '0/0' AS lsn,
      (CASE WHEN pg_is_in_recovery() THEN pg_last_wal_receive_lsn() ELSE NULL END)                 - '0/0' AS receive_lsn,
      (CASE WHEN pg_is_in_recovery() THEN pg_last_wal_replay_lsn() ELSE NULL END)                  - '0/0' AS replay_lsn,
      (CASE WHEN NOT pg_is_in_recovery() THEN pg_current_wal_insert_lsn() ELSE NULL END)           - '0/0' AS insert_lsn,
      (CASE WHEN NOT pg_is_in_recovery() THEN pg_current_wal_lsn() ELSE NULL END)                  - '0/0' AS write_lsn,
      (CASE WHEN NOT pg_is_in_recovery() THEN pg_current_wal_flush_lsn()  ELSE NULL END)           - '0/0' AS flush_lsn,
      extract(EPOCH FROM now() - pg_postmaster_start_time())                                               AS uptime,
      extract(EPOCH FROM now() - pg_conf_load_time())                                                      AS conf_reload_time,
      extract(EPOCH FROM now() - pg_backup_start_time())                                                   AS backup_time,
      CASE WHEN pg_is_in_recovery() THEN CASE WHEN
      pg_last_wal_receive_lsn() = pg_last_wal_replay_lsn() THEN 0
      ELSE EXTRACT(EPOCH FROM now() - pg_last_xact_replay_timestamp()) END ELSE NULL END                   AS lag,
      CASE WHEN pg_is_in_recovery() THEN extract(EPOCH FROM pg_last_xact_replay_timestamp()) ELSE NULL END AS last_replay_time;

  ttl: 10
  tags: [cluster]
  min_version: 100000
  max_version: 130000
  metrics:
    - is_in_recovery:
        usage: GAUGE
        description: 1 for standby and 0 for primary
    - is_in_backup:
        usage: GAUGE
        description: 1 if backup is in progress
    - lsn:
        usage: COUNTER
        description: log sequence number, write location for primary, replay location for standby
    - receive_lsn:
        usage: COUNTER
        description: standby only, location of wal synced to disk
    - replay_lsn:
        usage: COUNTER
        description: standby only, location of wal applied
    - insert_lsn:
        usage: COUNTER
        description: primary only, location of current wal inserting
    - write_lsn:
        usage: COUNTER
        description: primary only, location of current wal writing
    - flush_lsn:
        usage: COUNTER
        description: primary only, location of current wal syncing
    - uptime:
        usage: GAUGE
        description: seconds since postmaster start
    - conf_reload_time:
        usage: GAUGE
        description: seconds since last configuration reload
    - backup_time:
        usage: GAUGE
        description: seconds since current backup start. null if don't have one
    - lag:
        usage: GAUGE
        description: replication lag in seconds from view of standby server
    - last_replay_time:
        usage: GAUGE
        description: time when last transaction been replayed

