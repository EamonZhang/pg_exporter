#-------------------------------------------------------------#
# pg_checkpoint
# pg control checkpoint
#-------------------------------------------------------------#

pg_checkpoint:
  query: |
    SELECT checkpoint_lsn - '0/0'              AS checkpoint_lsn,
      redo_lsn - '0/0'                    AS redo_lsn,
      timeline_id                         AS timeline,
      split_part(next_xid, ':', 1)        AS next_xid_epoch,
      split_part(next_xid, ':', 2)        AS next_xid,
      next_oid,
      oldest_xid,
      oldest_active_xid,
      oldest_commit_ts_xid,
      newest_commit_ts_xid,
      extract(EPOCH FROM checkpoint_time) AS checkpoint_time
    FROM pg_control_checkpoint();

  ttl: 100
  tags: [cluster]
  min_version: 100000
  max_version: 130000
  metrics:
    - checkpoint_lsn:
        usage: COUNTER
        description: lsn of checkpoint
    - redo_lsn:
        usage: COUNTER
        description: redo start LSN
    - timeline:
        usage: GAUGE
        description: Current WAL timeline
    - next_xid_epoch:
        usage: GAUGE
        description: next xid epoch since this checkpoint
    - next_xid:
        usage: GAUGE
        description: next xid since this checkpoint
    - next_oid:
        usage: GAUGE
        description: next oid since this checkpoint
    - oldest_xid:
        usage: GAUGE
        description: oldest existing xid of the checkpoint
    - oldest_active_xid:
        usage: GAUGE
        description: oldest active xid of the checkpoint
    - oldest_commit_ts_xid:
        usage: GAUGE
        description: oldest xid with commit ts by the checkpoint
    - newest_commit_ts_xid:
        usage: GAUGE
        description: newest xid with commit ts by the checkpoint
    - checkpoint_time:
        usage: GAUGE
        description: timestamp of this checkpoint

